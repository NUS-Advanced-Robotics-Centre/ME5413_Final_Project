map_type: costmap
origin_z: 0.0
# z_resolution: 1
z_resolution: 0.1   # lee, 2023.04.xx
z_voxels: 2

obstacle_range: 2.5
raytrace_range: 3.0

publish_voxel_map: false
transform_tolerance: 0.5
meter_scoring: true

footprint: [[-0.21, -0.165], [-0.21, 0.165], [0.21, 0.165], [0.21, -0.165]]
footprint_padding: 0.1

plugins:
- {name: static_layer, type: "costmap_2d::StaticLayer"}
- {name: obstacles_layer, type: "costmap_2d::ObstacleLayer"}
- {name: costmap_prohibition_layer, type: "costmap_prohibition_layer_namespace::CostmapProhibitionLayer"} #probhibition area
- {name: inflater_layer, type: "costmap_2d::InflationLayer"}
- {name: rgbd_obstacle_layer,     type: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"}

obstacles_layer:
  observation_sources: scan
  # scan: {sensor_frame: front_laser, data_type: LaserScan, topic: front/scan, marking: true, clearing: true, min_obstacle_height: -2.0, max_obstacle_height: 2.0, obstacle_range: 2.5, raytrace_range: 3.0}
  scan: {sensor_frame: velodyne, data_type: PointCloud2, topic: /mid/points, marking: true, clearing: true, min_obstacle_height: -0.05, max_obstacle_height: 2.0, obstacle_range: 2.5, raytrace_range: 3.0}
inflater_layer:
 inflation_radius: 0.22 #0.30 lee, 2023.04.xx

# ---
# FOR SPATIAL TEMPORAL 
rgbd_obstacle_layer:
  enabled:                  true
  voxel_decay:              1000    # seconds if linear, e^n if exponential
  decay_model:              0     # 0=linear, 1=exponential, -1=persistent
  voxel_size:               0.05  # meters
  track_unknown_space:      true  # default space is known
  max_obstacle_height:      2.0   # meters
  unknown_threshold:        15    # voxel height
  mark_threshold:           0     # voxel height
  
  update_footprint_enabled: true
  combination_method:       1     # 1=max, 0=override
  #obstacle_range:           5.0   # meters
  #origin_z:                 0.0   # meters
  publish_voxel_map:        true #false # default off
  transform_tolerance:      0.2   # seconds
  mapping_mode:             false # default off, saves map not for navigation
  map_save_duration:        60    # default 60s, how often to autosave
  observation_sources:      rgbd1_mark rgbd1_clear inflater_layer
  
  rgbd1_mark:
    data_type: PointCloud2
    topic: /mid/points
    marking: true
    clearing: false
    min_obstacle_height: 0.0     # default 0, meters
    max_obstacle_height: 2.0     # default 3, meters
    expected_update_rate: 0.0    # default 0, if not updating at this rate at least, remove from buffer
    observation_persistence: 0.0 # default 0, use all measurements taken during now-value, 0=latest
    inf_is_valid: false          # default false, for laser scans. inf means infinite
    filter: "voxel"              # default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommend on
    voxel_min_points: 0          # default 0, minimum points per voxel for voxel filter
    clear_after_reading: true    # default false, clear the buffer after the layer gets readings from it
  
  rgbd1_clear:
    enabled: false                #default true, can be toggled on/off with associated service call
    data_type: PointCloud2
    topic: /mid/points
    marking: false
    clearing: true
    max_z: 8.0                  # default 0, meters
    min_z: 1.0                  # default 10, meters
    vertical_fov_angle: 0.523   # default 0.7, radians. For 3D lidars it's the symmetric FOV about the planar axis.
    vertical_fov_padding: 0.05    # 3D Lidar only. Default 0, in meters 
    horizontal_fov_angle: 6.29  # 3D lidar scanners like the VLP16 have 360 deg horizontal FOV.
    decay_acceleration: 5.0     # default 0, 1/s^2. 
    model_type: 1               # default 0, model type for frustum. 0=depth camera, 1=3d lidar like VLP16 or similar



